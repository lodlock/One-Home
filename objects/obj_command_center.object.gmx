<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_command_center</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create
draw_menu = false;
draw_submenu = "";
submenu_option[0] = "";

menu_option[0,0] = "Structure";
menu_option[0,1] = false;
menu_option[0,2] = "Build:Structure";

menu_option[1,0] = "Facilities";
menu_option[1,1] = false;
menu_option[1,2] = "Build:Facilities";

menu_option[2,0] = "Save / Quit";
menu_option[2,1] = false;
menu_option[2,2] = "Save:Quit";

menu_option[3,0] = "Exit Menu"
menu_option[3,1] = true;
menu_option[3,2] = "CloseMenu:void";

menu_highlight = 0;

submenu_highlight = 0;
tooltip = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Switch draw_resource

draw_menu = !draw_menu;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Changing the choice
var up_key      = keyboard_check_pressed(vk_up) or keyboard_check_pressed(ord('W'));
var down_key    = keyboard_check_pressed(vk_down) or keyboard_check_pressed(ord('S'));
    
if(draw_menu &amp;&amp; draw_submenu == ""){
    
    if(up_key &amp;&amp; menu_highlight &gt; 0) {
        for(var i = menu_highlight; i &gt; 0 ; i--) {
            if(menu_option[i-1,1]) {
                menu_highlight = i-1;
                break;
            }
        }
        audio_play_sound(snd_menu_select,0,false);
    }
    
    if(down_key &amp;&amp; (menu_highlight &lt; (array_height_2d(menu_option)-1))) {
        for(var i = menu_highlight; i &lt; (array_height_2d(menu_option)); i++) {
            if(menu_option[i+1,1]) {
                menu_highlight = i+1;
                break;
            }
        }
        audio_play_sound(snd_menu_select,0,false);
    }
} else if(draw_submenu != "") {
    if(up_key &amp;&amp; submenu_highlight &gt; 0) {
        submenu_highlight--;
        audio_play_sound(snd_menu_select,0,false);
    }
    
    if(down_key &amp;&amp; (submenu_highlight &lt; (array_height_2d(submenu_option)-1))) {
        submenu_highlight++;
        audio_play_sound(snd_menu_select,0,false);
    }
}

// Start Building once every npc is done talking.
var done_talking = true;
done_talking &amp;= global.didara[? "next"]  == "c999";
done_talking &amp;= global.alex[? "next"]    == "c999";
done_talking &amp;= global.tsai[? "next"]    == "c999";
done_talking &amp;= global.jacques[? "next"] == "c999";
done_talking &amp;= global.fayruz[? "next"]  == "c999";

if(done_talking){
    if(global.building.frames.material == noone)
        menu_option[0,1] = true;
    else
        menu_option[1,1] = true;
        
    tooltip = "";
} else {        
    tooltip = "Your co-workers have something to tell you! You might want to check them "+ 
              "out before trying to build anything.";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Show mouse position

show_debug_message("x: " + string(window_mouse_get_x()) +" - y: "+ string(window_mouse_get_y()));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>draw_menu</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Menu Screen
    // Draw the menu / Lock the player
    draw_sprite(spr_mainmenu,0,0,0);
    global.mv_free = false;
    
    // Presetting the fonts / color
    draw_set_font(fnt_menu_title);
    draw_set_colour (make_colour_rgb(198,142,113));
    draw_set_halign(fa_center);
    
    var menu_center = window_get_width()-(225/2);
    draw_text(menu_center,30,"ONE HOME");
    
    // Creating the menu options
    draw_set_font(fnt_menu_main);
    for(var i = 0; i &lt; array_height_2d(menu_option); i++){
        var yy = 160+(i*70);
        
        if(i == menu_highlight){
            draw_set_color(c_white);
            draw_sprite(spr_menu_selector,0,menu_center-80,yy);
        }
        
        if(menu_option[i,1])
            draw_set_color (make_colour_rgb(198,142,113))
        else
            draw_set_color (make_colour_rgb(148,92,63));
            
        draw_text(menu_center,yy,menu_option[i,0]);
    }
    
    // Draw the resources menu
    if(place_meeting(x,y,obj_player) || draw_menu){
        draw_set_halign(fa_left);
            
        draw_set_font(fnt_menu_resources);
        
        draw_text(32,  16, global.ls_resources[0,1]);
        draw_text(176, 16, global.ls_resources[1,1]);
        draw_text(320, 16, global.ls_resources[2,1]);
        draw_text(464, 16, global.ls_resources[3,1]);
        draw_text(608, 16, global.ls_resources[4,1]);
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Drawing the Building according to the actual status
    var xx, yy;
    xx = 226;//window_mouse_get_x();
    yy = 158//window_mouse_get_y();
    var bld = global.building;
    
    // Draw the Base
    draw_sprite(spr_Base,0,xx,yy);
    
    // Draw the Frames
    draw_sprite(bld.frames.sprite,0,xx,yy);
    
    // Draw the Windows
    draw_sprite(spr_Windows,0,xx,yy);
    
    // Draw the Roof
    draw_sprite(bld.roof.sprite,0,xx,yy);
    
    // Draw the Walls
    draw_sprite(bld.walls.sprite,0,xx,yy);
    
    // Draw the Shine
    draw_sprite(spr_Shine_Map,0,8,56);
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the submenu
draw_set_alpha(0.9);
draw_set_color(c_black);

var selector_yy;

if(draw_submenu == "structure"){
    draw_rectangle(560,56,735,531,false);
    draw_set_font(fnt_menu_sub_1);
    
    if(real(global.building.walls.material) == noone) {
        selector_yy = 128;
        draw_set_color(make_colour_rgb(198,142,113));
        draw_text(580, 86, "Walls");
        
        // Draw the options
        draw_set_font(fnt_menu_sub_2);
        var wall_options = global.ls_building[? "walls"];
        for(var i = 0; i &lt; array_height_2d(wall_options); i++){
            draw_set_halign(fa_center);
            draw_text(647, 126 + (30*i), wall_options[i,0]);
            draw_set_halign(fa_left);
        }
    } else {
        draw_set_font(fnt_menu_sub_1);
        draw_set_color (make_colour_rgb(148,92,63));
        draw_text(580, 86, "Walls");
    }
    
    if (real(global.building.walls.material) != noone and
        real(global.building.roof.material) == noone ) {
        
        draw_set_font(fnt_menu_sub_1);
        selector_yy = 188;
        draw_set_color(make_colour_rgb(198,142,113));
        draw_text(580, 146, "Roof");
        
        // Draw the options
        draw_set_font(fnt_menu_sub_2);
        var roof_options = global.ls_building[? "roof"];
        for(var i = 0; i &lt; array_height_2d(roof_options); i++){
            draw_set_halign(fa_center);
            draw_text(647, 186 + (30*i), roof_options[i,0]);
            draw_set_halign(fa_left);
        }
            
    } else {
        draw_set_font(fnt_menu_sub_1);
        draw_set_color (make_colour_rgb(148,92,63));
        if(real(global.building.roof.material) == noone)
            draw_text(580, 286, "Roof");
        else 
            draw_text(580, 146, "Roof");
    }
    
    if (real(global.building.roof.material) != noone and 
        real(global.building.frames.material) == noone) {
        
        draw_set_font(fnt_menu_sub_1);
        selector_yy = 248;
        draw_set_color(make_colour_rgb(198,142,113));
        draw_text(580, 206, "Windows");
        
        // Draw the options
        draw_set_font(fnt_menu_sub_2);
        var windows_options = global.ls_building[? "windows"];
        for(var i = 0; i &lt; array_height_2d(windows_options); i++){
            draw_set_halign(fa_center);
            draw_text(647, 246 + (30*i), windows_options[i,0]);
            draw_set_halign(fa_left);
        }
    } else {
        draw_set_font(fnt_menu_sub_1);
        draw_set_color (make_colour_rgb(148,92,63));
        if(real(global.building.frames.material) == noone)
            draw_text(580, 346, "Windows");
        else
            draw_text(580, 206, "Windows");
    }
    
    if(real(global.building.frames.material) == noone)
        draw_sprite(spr_menu_subselector,0,647, selector_yy + (30*submenu_highlight));
    
}
if(draw_submenu == "facilities"){
    draw_rectangle(560,56,735,531,false);
    draw_rectangle(560,56,735,531,false);
    draw_set_font(fnt_menu_sub_1);
    
    if(real(global.building.plumbing.material) == noone) {
        selector_yy = 128;
        draw_set_color(make_colour_rgb(198,142,113));
        draw_text(580, 86, "Plumbing");
        
        // Draw the options
        draw_set_font(fnt_menu_sub_2);
        var plumbing_options = global.ls_building[? "plumbing"];
        for(var i = 0; i &lt; array_height_2d(plumbing_options); i++){
            draw_set_halign(fa_center);
            draw_text(647, 126 + (30*i), plumbing_options[i,0]);
            draw_set_halign(fa_left);
        }
    } else {
        draw_set_font(fnt_menu_sub_1);
        draw_set_color (make_colour_rgb(148,92,63));
        draw_text(580, 86, "Walls");
    }
    
    if (real(global.building.plumbing.material) != noone and
        real(global.building.electricity.material) == noone ) {
        
        draw_set_font(fnt_menu_sub_1);
        selector_yy = 188;
        draw_set_color(make_colour_rgb(198,142,113));
        draw_text(580, 146, "Electricity");
        
        // Draw the options
        draw_set_font(fnt_menu_sub_2);
        var electricity_options = global.ls_building[? "electricity"];
        for(var i = 0; i &lt; array_height_2d(electricity_options); i++){
            draw_set_halign(fa_center);
            draw_text(647, 186 + (30*i), electricity_options[i,0]);
            draw_set_halign(fa_left);
        }
            
    } else {
        draw_set_font(fnt_menu_sub_1);
        draw_set_color (make_colour_rgb(148,92,63));
        if(real(global.building.electricity.material) == noone)
            draw_text(580, 286, "Electricity");
        else 
            draw_text(580, 146, "Electricity");
    }
    
    if (real(global.building.electricity.material) != noone and 
        real(global.building.heating.material) == noone) {
        
        draw_set_font(fnt_menu_sub_1);
        selector_yy = 248;
        draw_set_color(make_colour_rgb(198,142,113));
        draw_text(580, 206, "Heating");
        
        // Draw the options
        draw_set_font(fnt_menu_sub_2);
        var heating_options = global.ls_building[? "heating"];
        for(var i = 0; i &lt; array_height_2d(heating_options); i++){
            draw_set_halign(fa_center);
            draw_text(647, 246 + (30*i), heating_options[i,0]);
            draw_set_halign(fa_left);
        }
    } else {
        draw_set_font(fnt_menu_sub_1);
        draw_set_color (make_colour_rgb(148,92,63));
        if(real(global.building.heating.material) == noone)
            draw_text(580, 346, "Heating");
        else
            draw_text(580, 206, "Heating");
    }
    
    if(real(global.building.heating.material) == noone)
        draw_sprite(spr_menu_subselector,0,647, selector_yy + (30*submenu_highlight));
    
}

if(draw_submenu != ""){
    draw_set_colour(c_black);
    draw_set_alpha(.8);
    draw_roundrect(128,64,550,340,false);
    draw_set_alpha(.9);
    draw_set_halign(fa_left);
    draw_set_color(make_colour_rgb(198,142,113));
    
    draw_set_font(fnt_menu_sub_title);
    draw_text_ext(144,74,submenu_option[submenu_highlight,0],20,390);
    
    draw_set_font(fnt_menu_sub_description);
    draw_text_ext(144,104,submenu_option[submenu_highlight,1],20,390);
    
    draw_set_halign(fa_right);
    draw_set_font(fnt_menu_sub_materials);
    var resources_tmp = StringExplode(",",submenu_option[submenu_highlight,3]);
    var newString = "";
    
    for(var i = 0; i &lt; array_length_1d(resources_tmp);i++){
        var tmp = StringExplode(":",resources_tmp[i]);
        var ress = tmp[0];
        var vall = real(tmp[1]) * global.resource_coefficient;
        
        newString += ress + ": " + string(vall);
        
        if(i &lt; array_length_1d(resources_tmp) - 1)
            newString += " - ";
    }
    
    
    draw_text_ext(534,314,newString,20,390);
}
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Drawing the tooltips

    if(tooltip != ""){
        draw_set_alpha(0.9);
        draw_set_color(c_black);
        
        draw_set_halign(fa_left);
        
        draw_rectangle(6,490,736,window_get_height()-6,false);
        draw_set_font(fnt_menu_tooltip);
        
        draw_set_color(make_colour_rgb(198,142,113));
        draw_text(20, 500, tooltip);
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Don't draw
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Leaves submenu
if(draw_submenu != "") {
    draw_submenu = "";
    submenu_highlight = 0;
    audio_play_sound(snd_menu_select,0,false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Turn menu on


if(!draw_menu){
    if(place_meeting(x,y,obj_player) &amp;&amp; obj_player.direction == 90 &amp;&amp; global.mv_free){
        draw_menu = true;        
        for(var i = 0; !menu_option[i,1]; i++) menu_highlight = i+1;
    }
} else if(draw_submenu == "") {
    if(real(global.building.walls.material) == noone) submenu_option = global.ls_building[? "walls"];
    
    eventArr = StringExplode( ":", menu_option[menu_highlight,2] );
    TriggerEvent(eventArr[0],eventArr[1]);
    audio_play_sound(snd_menu_select,0,false);
    
} else {
        
    var option = submenu_option[submenu_highlight,0];
    
    if(real(global.building.walls.material) == noone){
        submenu_option = global.ls_building[? "walls"];
        option = submenu_option[submenu_highlight,0];
        TriggerEvent("BuildWall",option);
    } else if(real(global.building.roof.material) == noone ) {
        TriggerEvent("BuildRoof",option);
    } else if(real(global.building.frames.material) == noone) {
        TriggerEvent("BuildWindows",option);
    } else if(real(global.building.plumbing.material) == noone) {
        TriggerEvent("BuildPlumbing",option);
    } else if(real(global.building.electricity.material) == noone) {
        TriggerEvent("BuildElectricity",option);
    } else if(real(global.building.heating.material) == noone) {
        TriggerEvent("BuildHeating",option);
    }
        
    audio_play_sound(snd_menu_select,0,false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Turn menu off

if(draw_submenu == ""){
    if(place_meeting(x,y,obj_player) &amp;&amp; obj_player.direction == 90){
        draw_menu = false;
        global.mv_free = true;
    }
} else {
    draw_submenu = "";
    submenu_highlight = 0;
    audio_play_sound(snd_menu_select,0,false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
