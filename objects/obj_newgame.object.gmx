<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Creating the color

color = make_colour_rgb(198,142,113);

color_direction = -1;
color_diff = 0;

next_room = 0;

audio_play_sound(snd_Decision,1,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Changing the color

if(color_diff &lt; -60)
    color_direction = 4;

if(color_diff &gt; 60)
    color_direction = -4;

color_diff += color_direction;

color = make_colour_rgb(168 + color_diff,112 + color_diff,83 + color_diff);

var arrow_pressed   = keyboard_check_pressed(vk_up) or keyboard_check_pressed(ord('W'));
arrow_pressed       |= keyboard_check_pressed(vk_down) or keyboard_check_pressed(ord('S'));
arrow_pressed       |= keyboard_check_pressed(vk_right) or keyboard_check_pressed(ord('D'));
arrow_pressed       |= keyboard_check_pressed(vk_left) or keyboard_check_pressed(ord('A'));

if(arrow_pressed) audio_play_sound(snd_menu_select,1,false);

if(keyboard_check_pressed(vk_space)) next_room = 1;

if(next_room &gt; 0) next_room++;

if(next_room &gt;= 50) {
    audio_stop_all();
    room_goto(rm_intro);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the option

draw_set_color(color);
draw_set_halign(fa_center);
draw_set_alpha(1);

draw_set_font(fnt_menu_newgame);
var xx = window_get_width()/2;
var yy = window_get_height()/2 + 50;

draw_text(xx, yy, "New Game");

// Fade to black
draw_set_color(c_black);
draw_set_alpha(next_room * 0.02);
draw_rectangle(0,0,window_get_width(),window_get_height(), false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
