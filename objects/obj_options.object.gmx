<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initializing the variables
highlighted = 0;
thisOption[0] = 0;
text = "";

if(is_array(global.options)) thisOption = global.options;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Call the next dialog
CreateDialog(text,global.lastnpc);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Changing the choice

var up_key      = keyboard_check_pressed(vk_up) or keyboard_check_pressed(ord('W'));
var down_key    = keyboard_check_pressed(vk_down) or keyboard_check_pressed(ord('S'));

if(up_key &amp;&amp; highlighted &gt; 0) {
    highlighted--;
    audio_play_sound(snd_menu_select,0,false);
}

if(down_key &amp;&amp; (highlighted &lt; (array_length_1d(thisOption)-1))) {
    highlighted++;
    audio_play_sound(snd_menu_select,0,false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the Options (highlighting it)

if(is_array(global.options)){

    draw_set_colour(c_navy);
    draw_roundrect( 20,
                    window_get_height() - 150,
                    window_get_width() - 20, 
                    window_get_height() - 20, 
                    false);
                    
    draw_set_colour(c_white);
    draw_roundrect( 20,
                    window_get_height() - 150,
                    window_get_width() - 20, 
                    window_get_height() - 20, 
                    true);
                    
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
                    
    // Drawing the NPC / Player name
    draw_set_font(fnt_Helvetica_bold);
    draw_text_ext_transformed(  40, window_get_height() - 140,
                                obj_player.name, 12,
                                window_get_width() - 80,1,1,0);
                                
    for(var i = 0; i &lt; array_length_1d(global.options); i++){
        // Drawing the option text
        
        var option = global.options[i];
        
        if(highlighted == i) draw_set_font(fnt_option_bold);
        else draw_set_font(fnt_option);
        
        draw_text_ext_transformed( 70, window_get_height() - 115 + (30*i),
                                    option.text, 18,
                                    window_get_width() - 110,1,1,0);
    }
} else {
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Choose and destroy instance

// Choose
var opt = thisOption[highlighted];

// Setting what's to show next and destroy the obj_option.
if(opt.next != ""){
    switch(opt.npc){
        case "Didara":
            global.didara[? "next"] = opt.next;
            text = global.didara;
            break;
        case "Tsai":
            global.tsai[? "next"] = opt.next;
            text = global.tsai;
            break;
        case "Jacques":
            global.jacques[? "next"] = opt.next;
            text = global.jacques;
            break;
        case "Alex":
            global.alex[? "next"] = opt.next;
            text = global.alex;
            break;
        case "Fayruz":
            global.fayruz[? "next"] = opt.next;
            text = global.fayruz;
            break;
    }
    
    (global.lastnpc).line = 0;
}

(global.lastnpc).in_option = false;

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
